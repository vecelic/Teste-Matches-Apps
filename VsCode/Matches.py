import sqlite3
import os

# Definir o caminho da pasta do banco de dados
pasta_banco = r"D:/VsCode/BancoDeDados"
os.makedirs(pasta_banco, exist_ok=True)  # Cria a pasta se n√£o existir

# Caminhos dos bancos
caminho_cadastro = os.path.join(pasta_banco, "Cadastro.db")
caminho_gostos = os.path.join(pasta_banco, "Gostos.db")

# Conectar ao banco de cadastro
conn_cadastro = sqlite3.connect(caminho_cadastro)
cursor_cadastro = conn_cadastro.cursor()

# Conectar ao banco de gostos
conn_gostos = sqlite3.connect(caminho_gostos)
cursor_gostos = conn_gostos.cursor()

# üìå Listar usu√°rios
cursor_cadastro.execute("SELECT id, nome FROM usuarios")
usuarios = cursor_cadastro.fetchall()

if len(usuarios) < 2:
    print("‚ùå N√£o h√° usu√°rios suficientes para realizar a compara√ß√£o de matches!")
    conn_cadastro.close()
    conn_gostos.close()
    exit()

# üìå Exibir usu√°rios para escolha
print("\nUsu√°rios dispon√≠veis para encontrar matches:")
for id, nome in usuarios:
    print(f"{id} - {nome}")

# üìå Escolher dois usu√°rios para realizar o match
usuario1_id = input("\nDigite o ID do primeiro usu√°rio para compara√ß√£o: ")
usuario2_id = input("Digite o ID do segundo usu√°rio para compara√ß√£o: ")

# Verificar se os IDs s√£o v√°lidos
if usuario1_id == usuario2_id:
    print("‚ùå N√£o √© poss√≠vel comparar o mesmo usu√°rio com ele mesmo!")
    conn_cadastro.close()
    conn_gostos.close()
    exit()

# üìå Buscar os gostos dos dois usu√°rios
cursor_gostos.execute("SELECT tipo, gosto FROM gostos WHERE usuario_id = ?", (usuario1_id,))
gostos_usuario1 = cursor_gostos.fetchall()

cursor_gostos.execute("SELECT tipo, gosto FROM gostos WHERE usuario_id = ?", (usuario2_id,))
gostos_usuario2 = cursor_gostos.fetchall()

# üìå Comparar gostos dos usu√°rios
gostos_comum = set(gostos_usuario1) & set(gostos_usuario2)
quantidade_comum = len(gostos_comum)

# üìå Exibir resultado do match
if quantidade_comum > 0:
    print(f"\nüéâ Match encontrado entre {usuario1_id} e {usuario2_id}!")
    print(f"üë• Gostos em comum: {quantidade_comum}")
    print("Gostos em comum:")
    for tipo, gosto in gostos_comum:
        print(f"- {tipo.capitalize()}: {gosto}")
else:
    print("\n‚ùå Nenhum match encontrado entre os dois usu√°rios.")

# Fechar conex√µes
conn_cadastro.close()
conn_gostos.close()
